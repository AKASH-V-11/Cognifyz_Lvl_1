# -*- coding: utf-8 -*-
"""Cognifyz_Ak_L1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EWgkGbOhfTCpGUjonNHgUAqaUTTpR07R
"""

import pandas as pd
import matplotlib.pyplot as plt
#AKASH_TASK_1
# Load the dataset
df = pd.read_csv('/content/Dataset  (1).csv')

# Convert Cuisines column to string and split
df['Cuisines'] = df['Cuisines'].astype(str)
all_cuisines = df['Cuisines'].str.split(', ').explode()

# Get Top 3 cuisines
top_cuisines = all_cuisines.value_counts().head(3)
top_cuisines_percent = (top_cuisines / df.shape[0]) * 100

# Text output
print("Top 3 Cuisines and their Percentage:")
print(top_cuisines_percent.round(2))

# Chart
top_cuisines_percent.plot(kind='bar', color='orange')
plt.title('Top 3 Cuisines by Percentage')
plt.ylabel('Percentage')
plt.xticks(rotation=45)
plt.show()

#AKASH_TASK_2
# City with highest number of restaurants
top_city = df['City'].value_counts().idxmax()
print(f"City with the most restaurants: {top_city}")

# Average rating for each city
city_ratings = df.groupby('City')['Aggregate rating'].mean().sort_values(ascending=False)
best_city = city_ratings.idxmax()
print(f"City with the highest average rating: {best_city} - {city_ratings[best_city]:.2f}")

# Chart
city_ratings.head(10).plot(kind='bar', color='skyblue')
plt.title('Average Rating of Top 10 Cities')
plt.ylabel('Average Rating')
plt.xticks(rotation=45)
plt.show()

#AKASH_TASK_3
# Price range distribution
price_counts = df['Price range'].value_counts().sort_index()
price_percent = (price_counts / len(df)) * 100

# Text output
print("Percentage of Restaurants in Each Price Range:")
print(price_percent.round(2))

# Chart
price_counts.plot(kind='bar', color='purple')
plt.title('Price Range Distribution')
plt.xlabel('Price Range')
plt.ylabel('Number of Restaurants')
plt.xticks(rotation=0)
plt.show()

#AKASH_TASK_4
# Online delivery percentages
delivery_percent = df['Has Online delivery'].value_counts(normalize=True) * 100
print("Online Delivery Percentages:")
print(delivery_percent.round(2))

# Average ratings comparison
avg_ratings = df.groupby('Has Online delivery')['Aggregate rating'].mean()
print("\n Average Ratings:")
print("With Online Delivery:", round(avg_ratings[1], 2))
print("Without Online Delivery:", round(avg_ratings[0], 2))

# Chart
avg_ratings.plot(kind='bar', color=['red', 'green'])
plt.title('Avg Rating: Online Delivery vs No Delivery')
plt.ylabel('Average Rating')
plt.xticks([0, 1], ['No Delivery', 'Delivery'], rotation=0)
plt.show()